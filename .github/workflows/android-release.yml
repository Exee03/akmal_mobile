name: Android Release

# 1 - Controls when the workflow will run
on:
  # 2 - Triggers the workflow on push or pull request events for the "master" branch; you can change it according to your requirement
  push:
    tags:
      - "*"

  # 3 - Allows you to run this workflow manually from the Actions tab from your GitHub repo (a workflow run is made up of one or more jobs that can run sequentially or in paralle)
  workflow_dispatch:

env:
  JAVA_VERSION: "12.x"
  #change it to your project version
  FLUTTER_VERSION: "3.3.9"
  #change it to your project channel
  FLUTTER_CHANNEL: "stable"
  #change it to your project channel
  MAIN_BRANCH: "main"

# 4 - Contains a single job called build
jobs:
  version:
    name: Updating the code version and commiting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Mandatory to use the extract version from tag action
          fetch-depth: 0
      - name: Extract version from tag
        # With this, we can extract the version of the new tag
        #  and use it with Cider
        uses: damienaicheh/extract-version-from-tag-action@v1.0.0

      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{env.JAVA_VERSION}}
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          cache: true

      # Get dependencies and generating appbundle
      # Here I'm using appbundle, feel free to change it to APK
      - name: Get cider package
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          pub global activate cider

      - name: Change version number
        run: |
          cider release
          cider version ${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}+${{ env.NUMBER_OF_COMMITS }}

      # Here we have already updated the version on pubspec.yaml
      # But, tha changes are not commited to version control
      # Now, let's do it!
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: GitHub Actions
          author_email: actions@github.com
          # Change it to your own branch
          branch: ${{ env.MAIN_BRANCH }}
          message: "Update version on pubspec.yaml & update change log"
          # Change it to your own branch
          push: origin ${{ env.MAIN_BRANCH }} --force

  # 5 - Contains the type of runner that the job will run on
  build:
    name: Create Android Build
    runs-on: ubuntu-latest

    # 6 - Uses steps to represent a sequence of tasks that will be executed as part of job
    # 7 - Readies your repository under $GITHUB_WORKSPACE, so your job can access it
    steps:
      # 8 - Sets up Java so your job can use it for the Flutter app build
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{env.JAVA_VERSION}}
          cache: "gradle"
          
      # 9 - Sets up Flutter using the subosito Flutter workflow
      - uses: subosito/flutter-action@v2
        with:
          # 10 - Adjusts to the Flutter version you are working with
          channel: ${{env.FLUTTER_CHANNEL}}
          flutter-version: ${{env.FLUTTER_VERSION}}
          cache: true

      - name: Get firebase option
        run: echo "${{ secrets.FIREBASE_OPTION }}" > lib/firebase_options.dart

      # 11 - Runs a single command using the runnerâ€™s shell
      - name: Get dependencies
        run: flutter pub get

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      # Runs a set of commands using the runners shell
      - name: Start release build
        run: flutter build apk --release
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk