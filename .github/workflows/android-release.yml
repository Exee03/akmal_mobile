name: Android Release

# 1 - Controls when the workflow will run
on:
  # 2 - Triggers the workflow on push or pull request events for the "master" branch; you can change it according to your requirement
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # 3 - Allows you to run this workflow manually from the Actions tab from your GitHub repo (a workflow run is made up of one or more jobs that can run sequentially or in paralle)
  workflow_dispatch:

# 4 - Contains a single job called build
jobs:
  # 5 - Contains the type of runner that the job will run on
  build:
    runs-on: ubuntu-latest

    # 6 - Uses steps to represent a sequence of tasks that will be executed as part of job
    # 7 - Readies your repository under $GITHUB_WORKSPACE, so your job can access it
    steps:
      # 8 - Sets up Java so your job can use it for the Flutter app build
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"
      # 9 - Sets up Flutter using the subosito Flutter workflow
      - uses: subosito/flutter-action@v2
        with:
          # 10 - Adjusts to the Flutter version you are working with
          flutter-version: "3.3.9"
          channel: "stable"
          cache: true

      # 11 - Runs a single command using the runnerâ€™s shell
      - name: Get dependencies
        run: flutter pub get

      # Runs a set of commands using the runners shell
      - name: Start release build
        run: flutter build apk --release
